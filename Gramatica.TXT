PROGRAMA' -> PROGRAMA

PROGRAMA -> LISTA_PRO FUNCOES PRINCIPAL
PROGRAMA -> LISTA_PRO PRINCIPAL
PROGRAMA -> FUNCOES PRINCIPAL
PROGRAMA -> PRINCIPAL

EXP_COMP -> W ou W
EXP_COMP -> W
W -> W e Y
W -> Y
Y -> nao Y
Y -> X
X -> EXP_REL
X -> ( EXP_COMP )
EXP_REL -> E OP_SIMB E


E -> E + T
E -> E - T
E -> T
T -> T * F
T -> T / F
T -> T % F
T -> F
F -> - F
F -> ( E )
F -> id
F -> CHAMADA_FUNC
F -> id [ E ]
F -> numero
F -> char

LISTA_ARIT -> EXP_ARIT_AUX , LISTA_ARIT 
LISTA_ARIT -> EXP_ARIT_AUX 
EXP_ARIT_AUX -> E

OP_SIMB -> >
OP_SIMB -> >=
OP_SIMB -> <
OP_SIMB -> <=
OP_SIMB -> ==
OP_SIMB -> !=

IF -> se ( EXP_COMP ) { }
IF -> se ( EXP_COMP ) { } ELSE
IF -> se ( EXP_COMP ) { STEATMENT }
IF -> se ( EXP_COMP ) { STEATMENT } ELSE

ELSE -> senao { }
ELSE -> senao { STEATMENT }

REP -> uai ( EXP_COMP ) { }
REP -> uai ( EXP_COMP ) { STEATMENT }

LEI -> le ( id ) ;
LEI -> le ( id [ E ] ) ;

ESCR -> escreve ( E ) ;
ESCR -> escreve ( string ) ;

TIPO -> int
TIPO -> real
TIPO -> letra
TIPO -> nada

TIPO_C_RETORNO -> int
TIPO_C_RETORNO -> real
TIPO_C_RETORNO -> letra

STEATMENT -> STEATMENT IF
STEATMENT -> STEATMENT REP
STEATMENT -> STEATMENT LEI
STEATMENT -> STEATMENT ESCR
STEATMENT -> STEATMENT ATRIB
STEATMENT -> STEATMENT vaza ;
STEATMENT -> STEATMENT tome ; 
STEATMENT -> STEATMENT tome E ;
STEATMENT -> STEATMENT CHAMADA_FUNC ; 

STEATMENT -> IF
STEATMENT -> REP
STEATMENT -> LEI
STEATMENT -> ESCR
STEATMENT -> ATRIB 
STEATMENT -> vaza ;
STEATMENT -> tome ;
STEATMENT -> tome E ;
STEATMENT -> CHAMADA_FUNC ;

DECLARACOES -> DEC DECLARACOES 
DECLARACOES -> DEC 
DEC -> TIPO_C_RETORNO id ;
DEC -> TIPO_C_RETORNO id = E ;
DEC -> TIPO_C_RETORNO id [ E ] ;

ATRIB -> id = E ;
ATRIB -> id [ E ] = E ;

CHAMADA_FUNC -> id ( LISTA_ARIT )
CHAMADA_FUNC -> id ( )

LISTA_PRO -> LISTA_PRO PROTOTIPO 
LISTA_PRO -> PROTOTIPO

PROTOTIPO -> TIPO id ( LISTA_VARS ) ;
PROTOTIPO -> TIPO id ( ) ;

FUNCOES -> FUNCOES FUNCAO
FUNCOES -> FUNCAO

LISTA_VARS -> VARS , LISTA_VARS
LISTA_VARS -> VARS
VARS -> TIPO id
VARS -> TIPO id [ ]

FUNCAO -> TIPO id ( LISTA_VARS ) { }
FUNCAO -> TIPO id ( LISTA_VARS ) { DECLARACOES }
FUNCAO -> TIPO id ( LISTA_VARS ) { DECLARACOES STEATMENT }
FUNCAO -> TIPO id ( LISTA_VARS ) { STEATMENT }

FUNCAO -> TIPO id ( ) { }
FUNCAO -> TIPO id ( ) { DECLARACOES }
FUNCAO -> TIPO id ( ) { DECLARACOES STEATMENT }
FUNCAO -> TIPO id ( ) { STEATMENT }

PRINCIPAL -> int mainha ( ) { }
PRINCIPAL -> int mainha ( ) { DECLARACOES STEATMENT }
PRINCIPAL -> int mainha ( ) { DECLARACOES }
PRINCIPAL -> int mainha ( ) { STEATMENT }
